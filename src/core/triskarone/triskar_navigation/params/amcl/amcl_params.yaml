#amcl parameters, reference at: "http://wiki.ros.org/amcl"

############################################################################################################################################################################################################
#Overall filter parameters

# Minimum allowed number of particles. 
min_particles: 100
# Maximum allowed number of particles. 
max_particles: 1000
#Maximum error between the true distribution and the estimated distribution. 
kld_err: 0.05
#Upper standard normal quantile for (1 - p), where p is the probability that the error on the estimated distrubition will be less than kld_err. 
kld_z: 0.95
#Translational movement required before performing a filter update. (in meters)
update_min_d: 0.05
#Rotational movement required before performing a filter update.(in  π/value radians)
update_min_a: 18.0
#Number of filter updates required before resampling. 
resample_interval: 1
#Time in seconds with which to post-date the transform that is published, to indicate that this transform is valid into the future. 
transform_tolerance: 0.2
#Exponential decay rate for the slow average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.001.  
recovery_alpha_slow: 0.0
#Exponential decay rate for the fast average weight filter, used in deciding when to recover by adding random poses. A good value might be 0.1. 
recovery_alpha_fast: 0.0

#THESE PARAMETERS ARE NOT USED SINCE THE INITIAL POSE WILL BE SET BY THE USER
#Initial pose mean (x), used to initialize filter with Gaussian distribution. 
#initial_pose_x: 0.0
#Initial pose mean (y), used to initialize filter with Gaussian distribution. 
#initial_pose_y: 0.0   
#Initial pose mean (yaw), used to initialize filter with Gaussian distribution. 
#initial_pose_a: 0.0   
#Initial pose covariance (x*x), used to initialize filter with Gaussian distribution. 
#initial_cov_xx: 0.5*0.5
#Initial pose covariance (y*y), used to initialize filter with Gaussian distribution.   
#initial_cov_yy: 0.5*0.5 meters   
#Initial pose covariance (yaw*yaw), used to initialize filter with Gaussian distribution. 
#initial_cov_aa: (π/12)*(π/12)

#Maximum rate (Hz) at which scans and paths are published for visualization, -1.0 to disable. 
gui_publish_rate: 10.0
#Maximum rate (Hz) at which to store the last estimated pose and covariance to the parameter server, in the variables ~initial_pose_* and ~initial_cov_*. This saved pose will be used on subsequent runs to initialize the filter. -1.0 to disable. 
save_pose_rate: 0.5

#When set to true, AMCL will subscribe to the map topic rather than making a service call to receive its map.
use_map_topic: true
#When set to true, AMCL will only use the first map it subscribes to, rather than updating each time a new one is received.
first_map_only: true   #if set to true it works bad
#When set to true, will reduce the resampling rate when not needed and help avoid particle deprivation. The resampling will only happen if the effective number of particles (N_eff = 1/(sum(k_i^2))) is lower than half the current number of particles. 
selective_resampling: true  
############################################################################################################################################################################################################

#Laser model parameters
#Note that whichever mixture weights are in use should sum to 1. The beam model uses all 4: z_hit, z_short, z_max, and z_rand. The likelihood_field model uses only 2: z_hit and z_rand.

#Minimum scan range to be considered; -1.0 will cause the laser's reported minimum range to be used. 
laser_min_range: -1.0
#Maximum scan range to be considered; -1.0 will cause the laser's reported maximum range to be used. 
laser_max_range: -1.0
#How many evenly-spaced beams in each scan to be used when updating the filter. 
laser_max_beams: 30
#Mixture weight for the z_hit part of the model. 
laser_z_hit: 0.8
# Mixture weight for the z_short part of the model. 
laser_z_short: 0.05  #NOT USED IN LIKELIHOOD_FIELD
#Mixture weight for the z_max part of the model. 
laser_z_max: 0.05   #NOT USED IN LIKELIHOOD_FIELD
# Mixture weight for the z_rand part of the model. 
laser_z_rand: 0.2
#Standard deviation for Gaussian model used in z_hit part of the model. 
laser_sigma_hit: 0.2
#Exponential decay parameter for z_short part of model. 
laser_lambda_short: 0.1
#Maximum distance to do obstacle inflation on map, for use in likelihood_field model. 
laser_likelihood_max_dist: 4.0
#Which model to use, either beam, likelihood_field, or likelihood_field_prob (same as likelihood_field but incorporates the beamskip feature, if enabled). 
laser_model_type: "likelihood_field"

#############################################################################################################################################################################################################

#Odometry model parameters
#If ~odom_model_type is "omni" then we use a custom model for an omni-directional base, which uses odom_alpha1 through odom_alpha5. The meaning of the first four parameters is similar to that for the "diff" model. The fifth parameter capture the tendency of the robot to translate (without rotating) perpendicular to the observed direction of travel.

#Robot is omnidirectional, omni-corrected is used since it has some bugs corrected 
odom_model_type: "omni-corrected"
#Specifies the expected noise in odometry's rotation estimate from the rotational component of the robot's motion. 
odom_alpha1: 0.2
#Specifies the expected noise in odometry's rotation estimate from translational component of the robot's motion. 
odom_alpha2: 0.5
#Specifies the expected noise in odometry's translation estimate from the translational component of the robot's motion. 
odom_alpha3: 0.5
#Specifies the expected noise in odometry's translation estimate from the rotational component of the robot's motion. 
odom_alpha4: 0.5
#Translation-related noise parameter.
odom_alpha5: 0.8
#Which frame to use for odometry. 
odom_frame_id: "odom"
#Which frame to use for the robot base 
base_frame_id: "base_link"
#The name of the coordinate frame published by the localization system 
global_frame_id: "map"
#Set this to false to prevent amcl from publishing the transform between the global frame and the odometry frame. 
tf_broadcast: true



    
